{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createdId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.063e7f1d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    className=\"authInput\"\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"google\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"github\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    console.log(isOwner);\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\r\n            \"Are you sure you want to delete this nweet?\"\r\n        );\r\n        console.log(ok);\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    {isOwner && (\r\n                        <>\r\n                            <form\r\n                                onSubmit={onSubmit}\r\n                                className=\"container nweetEdit\"\r\n                            >\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Edit your nweet\"\r\n                                    value={newNweet}\r\n                                    required\r\n                                    onChange={onChange}\r\n                                />\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    value=\"Update Nweet\"\r\n                                    className=\"formBtn\"\r\n                                />\r\n                            </form>\r\n                            <button\r\n                                onClick={toggleEditing}\r\n                                className=\"formBtn cancelBtn\"\r\n                            >\r\n                                Cancle\r\n                            </button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment != \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(\r\n                attachment,\r\n                \"data_url\"\r\n            );\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            createdId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        console.log({ nweet });\r\n        setNweet(\"\");\r\n\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"&rarr;\"\r\n                    className=\"factoryInput__arrow\"\r\n                />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div\r\n                        className=\"factoryForm__clear\"\r\n                        onClick={onClearAttachment}\r\n                    >\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.createdId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul\r\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\r\n        >\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon\r\n                        icon={faTwitter}\r\n                        color={\"#04AAFF\"}\r\n                        size=\"2x\"\r\n                    />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={faUser}\r\n                        color={\"#04AAFF\"}\r\n                        size=\"2x\"\r\n                    />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"myBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"createdId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile\r\n                                userObj={userObj}\r\n                                refreshUser={refreshUser}\r\n                            />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"myBase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"Initializing...\"\n            )}\n            <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}